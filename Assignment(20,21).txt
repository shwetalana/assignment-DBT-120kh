(1)Which of these views are updateable(will allow DML operations)?
CREATE VIEW Dailyorders AS
SELECT DISTINCT cnum,
                snum,
                onum,
                odate
FROM Orders;
-> Yes


(2)CREATE VIEW Custotals AS
   SELECT cname,
       SUM (amt) Sum_Amt
    FROM Orders,
     Customers
    WHERE Orders.cnum=Customers.cnum
    GROUP BY cname;
->Views are note updatable which consists of join.

(3)CREATE VIEW Thirdorders AS
   SELECT *
   FROM Dailyorders
   WHERE odate=’03-OCT-1990’;
->not updatable due to distinct keyword in dailyorders;

(4)CREATE VIEW Nullcities AS
SELECT snum,
       sname,
       city
FROM Salespeople
WHERE city IS NULL
  OR sname BETWEEN ‘A’ AND ‘M’;
-> yes

2) Create a view of the Salespeople table called Commissions. This view will
include only the snum and comm fields. Through this view, someone could enter
or change commissions, but only to values between .10 and .20.
->CREATE VIEW commission AS
  SELECT snum,
       comm
  FROM salespeople
  WHERE comm BETWEEN .10 AND .20;

SELECT *
FROM commission;

3)Some SQL implementations have a built-in constant representing the current date,
sometimes called CURDATE or SYSDATE. The word CURDATE can
therefore be used in a SQL statement, and be replaced by the current date when
the value is accessed by commands such as Select or Insert. We will use a view of
the Orders table called Entryorders to insert rows into the Orders table. Create the
Orders table, so that CURDATE is automatically inserted for odate if no value is
given. Then create the Entryorders view so that no values can be given.

->#3 
CREATE TABLE IF NOT EXISTS 
`ORDERS_NEW`(

Onum INT(4),

Amt FLOAT(7,2),

Odate DATE default
 CURRENT_TIMESTAMP,

Cnum INT(4),

Snum INT(4)
);


create view Entryorders as 
select * from ORDERS_NEW;


                                       Assignment-21
1) Give Amit the right to change the ratings of the customers.
->GRANT
UPDATE ON customers TO Amit ;

 --Grant succeeded
 REVOKE
UPDATE ON customers
FROM Amit ;

2) Give Manoj the right to give other users the right to query the Orders table.
 GRANT
SELECT ON orders TO Manoj WITH GRANT OPTION;


 GRANT
SELECT ON Manoj.orders TO Seema;

 
 GRANT
UPDATE ON Manoj.orders TO Seema;


3) Take the INSERT privilege on Salespeople away from Ajita.
  REVOKE
  INSERT ON salespeople
  FROM Ajita;

4) Grant Abhijeet the right to insert or update the Customers table while keeping her
possible rating values in the range of 100 to 500.
  CREATE OR REPLACE VIEW range100 AS
  SELECT *
  FROM customers
  WHERE rating BETWEEN 100 AND 500 WITH CHECK OPTION;

 GRANT
UPDATE ON range100 TO Ajita;

INSERT INTO range100
VALUES(3000,
       'rakesh',
       'bikaner',
       700,
       7888);

INSERT INTO range100
VALUES(3000,
       'rakesh',
       'bikaner',
       700,
       7888)

5) Allow Vikram to query the Customers table, but restrict his access to those
customers whose rating is the lowest.
 ->CREATE OR REPLACE VIEW restrictmin AS
   SELECT *
   FROM customers
    WHERE rating NOT IN
    (SELECT min(rating)
     FROM customers);


 GRANT
SELECT ON restrictmin TO Vikaram;




                                  

